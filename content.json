{"meta":{"title":"H-Change的个人博客","subtitle":null,"description":null,"author":"H-Change","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"git的使用","slug":"git的使用-1","date":"2019-02-09T12:07:12.000Z","updated":"2019-02-10T01:35:46.339Z","comments":true,"path":"2019/02/09/git的使用-1/","link":"","permalink":"http://yoursite.com/2019/02/09/git的使用-1/","excerpt":"Git(读音为/gɪt/。)是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。 学习如何使用git来管理GitHub的仓库","text":"Git(读音为/gɪt/。)是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。 学习如何使用git来管理GitHub的仓库 1使用git clone https://github.com/litten/hexo-theme-yilia.git ，将仓库hexo-theme-yilia克隆到本地磁盘 2.首先我们进入我们克隆下的仓库（仓库中含有.git文件用来存储历史信息和配置信息），使用git status指令查看仓库状态（包括哪些文件更新了，哪些是新添的，哪些是被删除了等等），如图显示nothing to commit,working tree clean ,没有文件等待被提交，工作树是空的，表示一切正常 3.因为我们要把克隆下来的仓库上传到自己的github库中，所以我们这里需要连接远程库（这是一个在GitHub上新建的空库），一个项目可能有多个远程Repositories,为了区分不同的远程库，我们就要给他们起不同发的名字，注意这里theme1是我们给远程repository起的名字。名字不能重复（同一个名字不能给多个远程库使用） 第二张图是报错的情况，显示origin已经存在（origin是之前我创建的一个远程库名） 4.连接成功以后，就可以上传了，git push theme1 master指令（这条指令有两个参数，一个是远程Repo的名称【这里为theme1】；第二个是分支push【master是每个Repo的默认分支】），特别注意：这里的git push还会要求你输入你的github的用户名和密码才能运行 之后等待上传完成即可","categories":[],"tags":[{"name":"git,github","slug":"git-github","permalink":"http://yoursite.com/tags/git-github/"}]},{"title":"html学习","slug":"html学习","date":"2019-02-09T02:56:29.000Z","updated":"2019-02-09T03:11:18.845Z","comments":true,"path":"2019/02/09/html学习/","link":"","permalink":"http://yoursite.com/2019/02/09/html学习/","excerpt":"最近想学习微信小程序开发，因此在这里再来复习一下HTML的使用。 一些微信小程序与html的对比。","text":"最近想学习微信小程序开发，因此在这里再来复习一下HTML的使用。 一些微信小程序与html的对比。 ~~ ~~ ~~微信小程序开发就和web开发大同小异，其中插件，布局都是通过超文本标记语言来实现的 - style属性：每个标签都有style属性；用法： 这里包含了许多文本格式化的标签： 预格式化：这是预格式文本，保留了空格和段落，可用于表示计算机代码 计算机输出标签： &lt;&gt; &lt;&gt; &lt;&gt; 缩写和首字母缩写：etc. WWW 地址： Written by Donald Duck. Example.com Box 564, Disneyland USA 这样就保留了空格和换行。形式就像是信封上面的地址 改变文字方向：bdo—bi-directional override Here is some Hebrew text 实现长短不一的引用语：常引用，短引用 浏览器会插入换行和外边距，而q元素不会有任何插入 不会有任何插入 删除自效果和下划线效果： 删除 下划线","categories":[],"tags":[{"name":"html,复习","slug":"html-复习","permalink":"http://yoursite.com/tags/html-复习/"}]},{"title":"first of all","slug":"first-of-all","date":"2019-01-31T13:16:48.000Z","updated":"2019-01-31T13:16:48.857Z","comments":true,"path":"2019/01/31/first-of-all/","link":"","permalink":"http://yoursite.com/2019/01/31/first-of-all/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"The study of hex and git","slug":"使用git和hexo搭建博客","date":"2019-01-31T12:05:35.359Z","updated":"2019-02-01T02:42:27.268Z","comments":true,"path":"2019/01/31/使用git和hexo搭建博客/","link":"","permalink":"http://yoursite.com/2019/01/31/使用git和hexo搭建博客/","excerpt":"1.git 用于上传和下载repository上的文件 touch hello.txt—-创建一个文件，用于git init定义一个.git文件，从而来存储克隆下来的rope git status—-查看Repo的状态 git add hello.txt—-git add选择那些文件是需要提交的，这些被选择的作业就进入stage状态，等待最后被git commit","text":"1.git 用于上传和下载repository上的文件 touch hello.txt—-创建一个文件，用于git init定义一个.git文件，从而来存储克隆下来的rope git status—-查看Repo的状态 git add hello.txt—-git add选择那些文件是需要提交的，这些被选择的作业就进入stage状态，等待最后被git commit git reset—-取消stage状态 git commit -m ‘注释’—-提交 git commit –amend—-修改之前的commit叙述 git reset HEAD^ –soft—-取消commit,但保留修改的文件或项目 git reset HEAD^ –hard—-回到上一次commit干净的状态 git remote add origin htts://—-一个项目可能有多个远程Resipoditor，为了区分不同的远程repositories，我们就要给他们其不同的名字，这里的origin，就是这个分支的名字 git push origin master—-这里git push还会要求输入你GitHub的用户和密码，其有两个参数①远程仓库的origin名称②分支 git clone http://----克隆他人Repo，将其在本地创建 git pull—-跟新获取 git commit -m’注释’/git push/git pull 2.hexo 可以用于 hexo deploy—-部署到Github hexo new—-新建文章 hexo new page—-新建页面 hexo generate—-生成静态页面至public目录 hexo server—-开启预览访问端口（默认端口是4000） hexo help—-查看帮助 hexo version—-查看hexo的版本","categories":[],"tags":[]},{"title":"new file","slug":"new-file","date":"2019-01-31T02:17:43.000Z","updated":"2019-01-31T02:18:51.788Z","comments":true,"path":"2019/01/31/new-file/","link":"","permalink":"http://yoursite.com/2019/01/31/new-file/","excerpt":"","text":"12324gdkjgkdfjgk","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-01-31T01:23:27.916Z","updated":"2019-02-01T02:43:43.410Z","comments":true,"path":"2019/01/31/hello-world/","link":"","permalink":"http://yoursite.com/2019/01/31/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}